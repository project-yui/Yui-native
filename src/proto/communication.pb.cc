// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: communication.proto

#include "communication.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace nt {
namespace communication {
PROTOBUF_CONSTEXPR TcpBase::TcpBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.properties_)*/{}
  , /*decltype(_impl_.body_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errormsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/0
  , /*decltype(_impl_.subcommand_)*/0
  , /*decltype(_impl_.errorcode_)*/0
  , /*decltype(_impl_.reserved_)*/0} {}
struct TcpBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TcpBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TcpBaseDefaultTypeInternal() {}
  union {
    TcpBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TcpBaseDefaultTypeInternal _TcpBase_default_instance_;
PROTOBUF_CONSTEXPR Property::Property(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyDefaultTypeInternal() {}
  union {
    Property _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyDefaultTypeInternal _Property_default_instance_;
PROTOBUF_CONSTEXPR PokeReq::PokeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uin_)*/0u
  , /*decltype(_impl_.groupuin_)*/0u
  , /*decltype(_impl_.frienduin_)*/0u
  , /*decltype(_impl_.ext_)*/0u} {}
struct PokeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PokeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PokeReqDefaultTypeInternal() {}
  union {
    PokeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PokeReqDefaultTypeInternal _PokeReq_default_instance_;
PROTOBUF_CONSTEXPR StrangerSearchReq::StrangerSearchReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.targetuin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.settings_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StrangerSearchReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrangerSearchReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrangerSearchReqDefaultTypeInternal() {}
  union {
    StrangerSearchReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrangerSearchReqDefaultTypeInternal _StrangerSearchReq_default_instance_;
PROTOBUF_CONSTEXPR Settings::Settings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filed11_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.setting_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filed4_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsDefaultTypeInternal() {}
  union {
    Settings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsDefaultTypeInternal _Settings_default_instance_;
PROTOBUF_CONSTEXPR StrangerSearchResp::StrangerSearchResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.field3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.field1_)*/nullptr
  , /*decltype(_impl_.field2_)*/0} {}
struct StrangerSearchRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrangerSearchRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrangerSearchRespDefaultTypeInternal() {}
  union {
    StrangerSearchResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrangerSearchRespDefaultTypeInternal _StrangerSearchResp_default_instance_;
PROTOBUF_CONSTEXPR StrangerSearchRespField1::StrangerSearchRespField1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.field2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.field1_)*/0
  , /*decltype(_impl_.field4_)*/0} {}
struct StrangerSearchRespField1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrangerSearchRespField1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrangerSearchRespField1DefaultTypeInternal() {}
  union {
    StrangerSearchRespField1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrangerSearchRespField1DefaultTypeInternal _StrangerSearchRespField1_default_instance_;
}  // namespace communication
}  // namespace nt
static ::_pb::Metadata file_level_metadata_communication_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_communication_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_communication_2eproto = nullptr;

const uint32_t TableStruct_communication_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.subcommand_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.errorcode_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.body_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.errormsg_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.properties_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::TcpBase, _impl_.reserved_),
  ~0u,
  ~0u,
  1,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt::communication::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::Property, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::Property, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _impl_.uin_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _impl_.groupuin_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _impl_.frienduin_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::PokeReq, _impl_.ext_),
  ~0u,
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchReq, _impl_.targetuin_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchReq, _impl_.settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt::communication::Settings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::Settings, _impl_.filed4_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::Settings, _impl_.filed11_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::Settings, _impl_.setting_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchResp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchResp, _impl_.field1_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchResp, _impl_.field2_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchResp, _impl_.field3_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchRespField1, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchRespField1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchRespField1, _impl_.field1_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchRespField1, _impl_.field2_),
  PROTOBUF_FIELD_OFFSET(::nt::communication::StrangerSearchRespField1, _impl_.field4_),
  ~0u,
  ~0u,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::nt::communication::TcpBase)},
  { 20, -1, -1, sizeof(::nt::communication::Property)},
  { 28, 38, -1, sizeof(::nt::communication::PokeReq)},
  { 42, -1, -1, sizeof(::nt::communication::StrangerSearchReq)},
  { 50, -1, -1, sizeof(::nt::communication::Settings)},
  { 59, 68, -1, sizeof(::nt::communication::StrangerSearchResp)},
  { 71, 80, -1, sizeof(::nt::communication::StrangerSearchRespField1)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::nt::communication::_TcpBase_default_instance_._instance,
  &::nt::communication::_Property_default_instance_._instance,
  &::nt::communication::_PokeReq_default_instance_._instance,
  &::nt::communication::_StrangerSearchReq_default_instance_._instance,
  &::nt::communication::_Settings_default_instance_._instance,
  &::nt::communication::_StrangerSearchResp_default_instance_._instance,
  &::nt::communication::_StrangerSearchRespField1_default_instance_._instance,
};

const char descriptor_table_protodef_communication_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023communication.proto\022\020nt.communication\""
  "\310\001\n\007TcpBase\022\017\n\007command\030\001 \001(\005\022\022\n\nsubComma"
  "nd\030\002 \001(\005\022\026\n\terrorCode\030\003 \001(\005H\000\210\001\001\022\014\n\004body"
  "\030\004 \001(\014\022\025\n\010errorMsg\030\005 \001(\tH\001\210\001\001\022.\n\npropert"
  "ies\030\013 \003(\0132\032.nt.communication.Property\022\020\n"
  "\010reserved\030\014 \001(\005B\014\n\n_errorCodeB\013\n\t_errorM"
  "sg\"&\n\010Property\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\014\"m\n\007PokeReq\022\013\n\003uin\030\001 \001(\r\022\025\n\010groupUin\030\002"
  " \001(\rH\000\210\001\001\022\026\n\tfriendUin\030\005 \001(\rH\001\210\001\001\022\013\n\003Ext"
  "\030\006 \001(\rB\013\n\t_groupUinB\014\n\n_friendUin\"T\n\021Str"
  "angerSearchReq\022\021\n\ttargetUin\030\001 \001(\t\022,\n\010set"
  "tings\030\003 \001(\0132\032.nt.communication.Settings\""
  "<\n\010Settings\022\016\n\006filed4\030\004 \001(\r\022\017\n\007filed11\030\013"
  " \001(\t\022\017\n\007setting\0307 \001(\t\"\200\001\n\022StrangerSearch"
  "Resp\022:\n\006field1\030\001 \001(\0132*.nt.communication."
  "StrangerSearchRespField1\022\023\n\006field2\030\002 \001(\005"
  "H\000\210\001\001\022\016\n\006field3\030\003 \001(\014B\t\n\007_field2\"Z\n\030Stra"
  "ngerSearchRespField1\022\016\n\006field1\030\001 \001(\005\022\016\n\006"
  "field2\030\002 \001(\t\022\023\n\006field4\030\004 \001(\005H\000\210\001\001B\t\n\007_fi"
  "eld4b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_communication_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_communication_2eproto = {
    false, false, 772, descriptor_table_protodef_communication_2eproto,
    "communication.proto",
    &descriptor_table_communication_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_communication_2eproto::offsets,
    file_level_metadata_communication_2eproto, file_level_enum_descriptors_communication_2eproto,
    file_level_service_descriptors_communication_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_communication_2eproto_getter() {
  return &descriptor_table_communication_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_communication_2eproto(&descriptor_table_communication_2eproto);
namespace nt {
namespace communication {

// ===================================================================

class TcpBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TcpBase>()._impl_._has_bits_);
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_errormsg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TcpBase::TcpBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.TcpBase)
}
TcpBase::TcpBase(const TcpBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TcpBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.properties_){from._impl_.properties_}
    , decltype(_impl_.body_){}
    , decltype(_impl_.errormsg_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.subcommand_){}
    , decltype(_impl_.errorcode_){}
    , decltype(_impl_.reserved_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    _this->_impl_.body_.Set(from._internal_body(), 
      _this->GetArenaForAllocation());
  }
  _impl_.errormsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_errormsg()) {
    _this->_impl_.errormsg_.Set(from._internal_errormsg(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.command_, &from._impl_.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reserved_) -
    reinterpret_cast<char*>(&_impl_.command_)) + sizeof(_impl_.reserved_));
  // @@protoc_insertion_point(copy_constructor:nt.communication.TcpBase)
}

inline void TcpBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.properties_){arena}
    , decltype(_impl_.body_){}
    , decltype(_impl_.errormsg_){}
    , decltype(_impl_.command_){0}
    , decltype(_impl_.subcommand_){0}
    , decltype(_impl_.errorcode_){0}
    , decltype(_impl_.reserved_){0}
  };
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.errormsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TcpBase::~TcpBase() {
  // @@protoc_insertion_point(destructor:nt.communication.TcpBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TcpBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.properties_.~RepeatedPtrField();
  _impl_.body_.Destroy();
  _impl_.errormsg_.Destroy();
}

void TcpBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TcpBase::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.TcpBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.body_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.errormsg_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.subcommand_) -
      reinterpret_cast<char*>(&_impl_.command_)) + sizeof(_impl_.subcommand_));
  _impl_.errorcode_ = 0;
  _impl_.reserved_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TcpBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.command_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 subCommand = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.subcommand_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 errorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_errorcode(&has_bits);
          _impl_.errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes body = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_body();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string errorMsg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_errormsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.TcpBase.errorMsg"));
        } else
          goto handle_unusual;
        continue;
      // repeated .nt.communication.Property properties = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_properties(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 reserved = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TcpBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.TcpBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 command = 1;
  if (this->_internal_command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_command(), target);
  }

  // int32 subCommand = 2;
  if (this->_internal_subcommand() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_subcommand(), target);
  }

  // optional int32 errorCode = 3;
  if (_internal_has_errorcode()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_errorcode(), target);
  }

  // bytes body = 4;
  if (!this->_internal_body().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_body(), target);
  }

  // optional string errorMsg = 5;
  if (_internal_has_errormsg()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormsg().data(), static_cast<int>(this->_internal_errormsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.TcpBase.errorMsg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_errormsg(), target);
  }

  // repeated .nt.communication.Property properties = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_properties_size()); i < n; i++) {
    const auto& repfield = this->_internal_properties(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 reserved = 12;
  if (this->_internal_reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.TcpBase)
  return target;
}

size_t TcpBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.TcpBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nt.communication.Property properties = 11;
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->_impl_.properties_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes body = 4;
  if (!this->_internal_body().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_body());
  }

  // optional string errorMsg = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormsg());
  }

  // int32 command = 1;
  if (this->_internal_command() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_command());
  }

  // int32 subCommand = 2;
  if (this->_internal_subcommand() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_subcommand());
  }

  // optional int32 errorCode = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_errorcode());
  }

  // int32 reserved = 12;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TcpBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TcpBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TcpBase::GetClassData() const { return &_class_data_; }


void TcpBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TcpBase*>(&to_msg);
  auto& from = static_cast<const TcpBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.TcpBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_has_errormsg()) {
    _this->_internal_set_errormsg(from._internal_errormsg());
  }
  if (from._internal_command() != 0) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_subcommand() != 0) {
    _this->_internal_set_subcommand(from._internal_subcommand());
  }
  if (from._internal_has_errorcode()) {
    _this->_internal_set_errorcode(from._internal_errorcode());
  }
  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TcpBase::CopyFrom(const TcpBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.TcpBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TcpBase::IsInitialized() const {
  return true;
}

void TcpBase::InternalSwap(TcpBase* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.body_, lhs_arena,
      &other->_impl_.body_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errormsg_, lhs_arena,
      &other->_impl_.errormsg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TcpBase, _impl_.reserved_)
      + sizeof(TcpBase::_impl_.reserved_)
      - PROTOBUF_FIELD_OFFSET(TcpBase, _impl_.command_)>(
          reinterpret_cast<char*>(&_impl_.command_),
          reinterpret_cast<char*>(&other->_impl_.command_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TcpBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[0]);
}

// ===================================================================

class Property::_Internal {
 public:
};

Property::Property(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.Property)
}
Property::Property(const Property& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Property* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:nt.communication.Property)
}

inline void Property::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:nt.communication.Property)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Property::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
}

void Property::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.Property)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Property::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.Property.key"));
        } else
          goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Property::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.Property)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.Property.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.Property)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Property::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Property::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Property::GetClassData() const { return &_class_data_; }


void Property::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Property*>(&to_msg);
  auto& from = static_cast<const Property&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.Property)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::InternalSwap(Property* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Property::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[1]);
}

// ===================================================================

class PokeReq::_Internal {
 public:
  using HasBits = decltype(std::declval<PokeReq>()._impl_._has_bits_);
  static void set_has_groupuin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frienduin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PokeReq::PokeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.PokeReq)
}
PokeReq::PokeReq(const PokeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PokeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uin_){}
    , decltype(_impl_.groupuin_){}
    , decltype(_impl_.frienduin_){}
    , decltype(_impl_.ext_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uin_, &from._impl_.uin_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ext_) -
    reinterpret_cast<char*>(&_impl_.uin_)) + sizeof(_impl_.ext_));
  // @@protoc_insertion_point(copy_constructor:nt.communication.PokeReq)
}

inline void PokeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uin_){0u}
    , decltype(_impl_.groupuin_){0u}
    , decltype(_impl_.frienduin_){0u}
    , decltype(_impl_.ext_){0u}
  };
}

PokeReq::~PokeReq() {
  // @@protoc_insertion_point(destructor:nt.communication.PokeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PokeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PokeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PokeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.PokeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uin_ = 0u;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.groupuin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.frienduin_) -
        reinterpret_cast<char*>(&_impl_.groupuin_)) + sizeof(_impl_.frienduin_));
  }
  _impl_.ext_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PokeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 groupUin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_groupuin(&has_bits);
          _impl_.groupuin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 friendUin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_frienduin(&has_bits);
          _impl_.frienduin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ext = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.ext_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PokeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.PokeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uin = 1;
  if (this->_internal_uin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uin(), target);
  }

  // optional uint32 groupUin = 2;
  if (_internal_has_groupuin()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_groupuin(), target);
  }

  // optional uint32 friendUin = 5;
  if (_internal_has_frienduin()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_frienduin(), target);
  }

  // uint32 Ext = 6;
  if (this->_internal_ext() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.PokeReq)
  return target;
}

size_t PokeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.PokeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 uin = 1;
  if (this->_internal_uin() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uin());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 groupUin = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_groupuin());
    }

    // optional uint32 friendUin = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_frienduin());
    }

  }
  // uint32 Ext = 6;
  if (this->_internal_ext() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ext());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PokeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PokeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PokeReq::GetClassData() const { return &_class_data_; }


void PokeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PokeReq*>(&to_msg);
  auto& from = static_cast<const PokeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.PokeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uin() != 0) {
    _this->_internal_set_uin(from._internal_uin());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.groupuin_ = from._impl_.groupuin_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.frienduin_ = from._impl_.frienduin_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (from._internal_ext() != 0) {
    _this->_internal_set_ext(from._internal_ext());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PokeReq::CopyFrom(const PokeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.PokeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PokeReq::IsInitialized() const {
  return true;
}

void PokeReq::InternalSwap(PokeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PokeReq, _impl_.ext_)
      + sizeof(PokeReq::_impl_.ext_)
      - PROTOBUF_FIELD_OFFSET(PokeReq, _impl_.uin_)>(
          reinterpret_cast<char*>(&_impl_.uin_),
          reinterpret_cast<char*>(&other->_impl_.uin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PokeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[2]);
}

// ===================================================================

class StrangerSearchReq::_Internal {
 public:
  static const ::nt::communication::Settings& settings(const StrangerSearchReq* msg);
};

const ::nt::communication::Settings&
StrangerSearchReq::_Internal::settings(const StrangerSearchReq* msg) {
  return *msg->_impl_.settings_;
}
StrangerSearchReq::StrangerSearchReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.StrangerSearchReq)
}
StrangerSearchReq::StrangerSearchReq(const StrangerSearchReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StrangerSearchReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuin_){}
    , decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.targetuin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetuin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_targetuin().empty()) {
    _this->_impl_.targetuin_.Set(from._internal_targetuin(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_settings()) {
    _this->_impl_.settings_ = new ::nt::communication::Settings(*from._impl_.settings_);
  }
  // @@protoc_insertion_point(copy_constructor:nt.communication.StrangerSearchReq)
}

inline void StrangerSearchReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuin_){}
    , decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.targetuin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetuin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StrangerSearchReq::~StrangerSearchReq() {
  // @@protoc_insertion_point(destructor:nt.communication.StrangerSearchReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StrangerSearchReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.targetuin_.Destroy();
  if (this != internal_default_instance()) delete _impl_.settings_;
}

void StrangerSearchReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StrangerSearchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.StrangerSearchReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetuin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.settings_ != nullptr) {
    delete _impl_.settings_;
  }
  _impl_.settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StrangerSearchReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string targetUin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_targetuin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.StrangerSearchReq.targetUin"));
        } else
          goto handle_unusual;
        continue;
      // .nt.communication.Settings settings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StrangerSearchReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.StrangerSearchReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetUin = 1;
  if (!this->_internal_targetuin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetuin().data(), static_cast<int>(this->_internal_targetuin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.StrangerSearchReq.targetUin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_targetuin(), target);
  }

  // .nt.communication.Settings settings = 3;
  if (this->_internal_has_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.StrangerSearchReq)
  return target;
}

size_t StrangerSearchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.StrangerSearchReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string targetUin = 1;
  if (!this->_internal_targetuin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetuin());
  }

  // .nt.communication.Settings settings = 3;
  if (this->_internal_has_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StrangerSearchReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StrangerSearchReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StrangerSearchReq::GetClassData() const { return &_class_data_; }


void StrangerSearchReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StrangerSearchReq*>(&to_msg);
  auto& from = static_cast<const StrangerSearchReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.StrangerSearchReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targetuin().empty()) {
    _this->_internal_set_targetuin(from._internal_targetuin());
  }
  if (from._internal_has_settings()) {
    _this->_internal_mutable_settings()->::nt::communication::Settings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StrangerSearchReq::CopyFrom(const StrangerSearchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.StrangerSearchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrangerSearchReq::IsInitialized() const {
  return true;
}

void StrangerSearchReq::InternalSwap(StrangerSearchReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.targetuin_, lhs_arena,
      &other->_impl_.targetuin_, rhs_arena
  );
  swap(_impl_.settings_, other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StrangerSearchReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[3]);
}

// ===================================================================

class Settings::_Internal {
 public:
};

Settings::Settings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.Settings)
}
Settings::Settings(const Settings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Settings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.filed11_){}
    , decltype(_impl_.setting_){}
    , decltype(_impl_.filed4_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.filed11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filed11_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filed11().empty()) {
    _this->_impl_.filed11_.Set(from._internal_filed11(), 
      _this->GetArenaForAllocation());
  }
  _impl_.setting_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.setting_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_setting().empty()) {
    _this->_impl_.setting_.Set(from._internal_setting(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.filed4_ = from._impl_.filed4_;
  // @@protoc_insertion_point(copy_constructor:nt.communication.Settings)
}

inline void Settings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filed11_){}
    , decltype(_impl_.setting_){}
    , decltype(_impl_.filed4_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.filed11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filed11_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.setting_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.setting_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:nt.communication.Settings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Settings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.filed11_.Destroy();
  _impl_.setting_.Destroy();
}

void Settings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.Settings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filed11_.ClearToEmpty();
  _impl_.setting_.ClearToEmpty();
  _impl_.filed4_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Settings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 filed4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.filed4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string filed11 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_filed11();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.Settings.filed11"));
        } else
          goto handle_unusual;
        continue;
      // string setting = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_setting();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.Settings.setting"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Settings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.Settings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 filed4 = 4;
  if (this->_internal_filed4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_filed4(), target);
  }

  // string filed11 = 11;
  if (!this->_internal_filed11().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filed11().data(), static_cast<int>(this->_internal_filed11().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.Settings.filed11");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_filed11(), target);
  }

  // string setting = 55;
  if (!this->_internal_setting().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_setting().data(), static_cast<int>(this->_internal_setting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.Settings.setting");
    target = stream->WriteStringMaybeAliased(
        55, this->_internal_setting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.Settings)
  return target;
}

size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.Settings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filed11 = 11;
  if (!this->_internal_filed11().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filed11());
  }

  // string setting = 55;
  if (!this->_internal_setting().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_setting());
  }

  // uint32 filed4 = 4;
  if (this->_internal_filed4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_filed4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Settings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Settings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Settings::GetClassData() const { return &_class_data_; }


void Settings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Settings*>(&to_msg);
  auto& from = static_cast<const Settings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.Settings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filed11().empty()) {
    _this->_internal_set_filed11(from._internal_filed11());
  }
  if (!from._internal_setting().empty()) {
    _this->_internal_set_setting(from._internal_setting());
  }
  if (from._internal_filed4() != 0) {
    _this->_internal_set_filed4(from._internal_filed4());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  return true;
}

void Settings::InternalSwap(Settings* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filed11_, lhs_arena,
      &other->_impl_.filed11_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.setting_, lhs_arena,
      &other->_impl_.setting_, rhs_arena
  );
  swap(_impl_.filed4_, other->_impl_.filed4_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Settings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[4]);
}

// ===================================================================

class StrangerSearchResp::_Internal {
 public:
  using HasBits = decltype(std::declval<StrangerSearchResp>()._impl_._has_bits_);
  static const ::nt::communication::StrangerSearchRespField1& field1(const StrangerSearchResp* msg);
  static void set_has_field2(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::nt::communication::StrangerSearchRespField1&
StrangerSearchResp::_Internal::field1(const StrangerSearchResp* msg) {
  return *msg->_impl_.field1_;
}
StrangerSearchResp::StrangerSearchResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.StrangerSearchResp)
}
StrangerSearchResp::StrangerSearchResp(const StrangerSearchResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StrangerSearchResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.field3_){}
    , decltype(_impl_.field1_){nullptr}
    , decltype(_impl_.field2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.field3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field3().empty()) {
    _this->_impl_.field3_.Set(from._internal_field3(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_field1()) {
    _this->_impl_.field1_ = new ::nt::communication::StrangerSearchRespField1(*from._impl_.field1_);
  }
  _this->_impl_.field2_ = from._impl_.field2_;
  // @@protoc_insertion_point(copy_constructor:nt.communication.StrangerSearchResp)
}

inline void StrangerSearchResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.field3_){}
    , decltype(_impl_.field1_){nullptr}
    , decltype(_impl_.field2_){0}
  };
  _impl_.field3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StrangerSearchResp::~StrangerSearchResp() {
  // @@protoc_insertion_point(destructor:nt.communication.StrangerSearchResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StrangerSearchResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field3_.Destroy();
  if (this != internal_default_instance()) delete _impl_.field1_;
}

void StrangerSearchResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StrangerSearchResp::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.StrangerSearchResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field3_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.field1_ != nullptr) {
    delete _impl_.field1_;
  }
  _impl_.field1_ = nullptr;
  _impl_.field2_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StrangerSearchResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .nt.communication.StrangerSearchRespField1 field1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_field1(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 field2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_field2(&has_bits);
          _impl_.field2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes field3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_field3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StrangerSearchResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.StrangerSearchResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .nt.communication.StrangerSearchRespField1 field1 = 1;
  if (this->_internal_has_field1()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::field1(this),
        _Internal::field1(this).GetCachedSize(), target, stream);
  }

  // optional int32 field2 = 2;
  if (_internal_has_field2()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_field2(), target);
  }

  // bytes field3 = 3;
  if (!this->_internal_field3().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_field3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.StrangerSearchResp)
  return target;
}

size_t StrangerSearchResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.StrangerSearchResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes field3 = 3;
  if (!this->_internal_field3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_field3());
  }

  // .nt.communication.StrangerSearchRespField1 field1 = 1;
  if (this->_internal_has_field1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.field1_);
  }

  // optional int32 field2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_field2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StrangerSearchResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StrangerSearchResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StrangerSearchResp::GetClassData() const { return &_class_data_; }


void StrangerSearchResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StrangerSearchResp*>(&to_msg);
  auto& from = static_cast<const StrangerSearchResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.StrangerSearchResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field3().empty()) {
    _this->_internal_set_field3(from._internal_field3());
  }
  if (from._internal_has_field1()) {
    _this->_internal_mutable_field1()->::nt::communication::StrangerSearchRespField1::MergeFrom(
        from._internal_field1());
  }
  if (from._internal_has_field2()) {
    _this->_internal_set_field2(from._internal_field2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StrangerSearchResp::CopyFrom(const StrangerSearchResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.StrangerSearchResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrangerSearchResp::IsInitialized() const {
  return true;
}

void StrangerSearchResp::InternalSwap(StrangerSearchResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.field3_, lhs_arena,
      &other->_impl_.field3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StrangerSearchResp, _impl_.field2_)
      + sizeof(StrangerSearchResp::_impl_.field2_)
      - PROTOBUF_FIELD_OFFSET(StrangerSearchResp, _impl_.field1_)>(
          reinterpret_cast<char*>(&_impl_.field1_),
          reinterpret_cast<char*>(&other->_impl_.field1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StrangerSearchResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[5]);
}

// ===================================================================

class StrangerSearchRespField1::_Internal {
 public:
  using HasBits = decltype(std::declval<StrangerSearchRespField1>()._impl_._has_bits_);
  static void set_has_field4(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StrangerSearchRespField1::StrangerSearchRespField1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.communication.StrangerSearchRespField1)
}
StrangerSearchRespField1::StrangerSearchRespField1(const StrangerSearchRespField1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StrangerSearchRespField1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.field2_){}
    , decltype(_impl_.field1_){}
    , decltype(_impl_.field4_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.field2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field2().empty()) {
    _this->_impl_.field2_.Set(from._internal_field2(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.field1_, &from._impl_.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.field4_) -
    reinterpret_cast<char*>(&_impl_.field1_)) + sizeof(_impl_.field4_));
  // @@protoc_insertion_point(copy_constructor:nt.communication.StrangerSearchRespField1)
}

inline void StrangerSearchRespField1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.field2_){}
    , decltype(_impl_.field1_){0}
    , decltype(_impl_.field4_){0}
  };
  _impl_.field2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StrangerSearchRespField1::~StrangerSearchRespField1() {
  // @@protoc_insertion_point(destructor:nt.communication.StrangerSearchRespField1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StrangerSearchRespField1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field2_.Destroy();
}

void StrangerSearchRespField1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StrangerSearchRespField1::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.communication.StrangerSearchRespField1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field2_.ClearToEmpty();
  _impl_.field1_ = 0;
  _impl_.field4_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StrangerSearchRespField1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 field1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.field1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string field2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.communication.StrangerSearchRespField1.field2"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 field4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_field4(&has_bits);
          _impl_.field4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StrangerSearchRespField1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.communication.StrangerSearchRespField1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field1 = 1;
  if (this->_internal_field1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_field1(), target);
  }

  // string field2 = 2;
  if (!this->_internal_field2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field2().data(), static_cast<int>(this->_internal_field2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.communication.StrangerSearchRespField1.field2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field2(), target);
  }

  // optional int32 field4 = 4;
  if (_internal_has_field4()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_field4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.communication.StrangerSearchRespField1)
  return target;
}

size_t StrangerSearchRespField1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.communication.StrangerSearchRespField1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field2 = 2;
  if (!this->_internal_field2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field2());
  }

  // int32 field1 = 1;
  if (this->_internal_field1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_field1());
  }

  // optional int32 field4 = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_field4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StrangerSearchRespField1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StrangerSearchRespField1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StrangerSearchRespField1::GetClassData() const { return &_class_data_; }


void StrangerSearchRespField1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StrangerSearchRespField1*>(&to_msg);
  auto& from = static_cast<const StrangerSearchRespField1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.communication.StrangerSearchRespField1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field2().empty()) {
    _this->_internal_set_field2(from._internal_field2());
  }
  if (from._internal_field1() != 0) {
    _this->_internal_set_field1(from._internal_field1());
  }
  if (from._internal_has_field4()) {
    _this->_internal_set_field4(from._internal_field4());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StrangerSearchRespField1::CopyFrom(const StrangerSearchRespField1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.communication.StrangerSearchRespField1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrangerSearchRespField1::IsInitialized() const {
  return true;
}

void StrangerSearchRespField1::InternalSwap(StrangerSearchRespField1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.field2_, lhs_arena,
      &other->_impl_.field2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StrangerSearchRespField1, _impl_.field4_)
      + sizeof(StrangerSearchRespField1::_impl_.field4_)
      - PROTOBUF_FIELD_OFFSET(StrangerSearchRespField1, _impl_.field1_)>(
          reinterpret_cast<char*>(&_impl_.field1_),
          reinterpret_cast<char*>(&other->_impl_.field1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StrangerSearchRespField1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace communication
}  // namespace nt
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nt::communication::TcpBase*
Arena::CreateMaybeMessage< ::nt::communication::TcpBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::TcpBase >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::Property*
Arena::CreateMaybeMessage< ::nt::communication::Property >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::Property >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::PokeReq*
Arena::CreateMaybeMessage< ::nt::communication::PokeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::PokeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::StrangerSearchReq*
Arena::CreateMaybeMessage< ::nt::communication::StrangerSearchReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::StrangerSearchReq >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::Settings*
Arena::CreateMaybeMessage< ::nt::communication::Settings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::Settings >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::StrangerSearchResp*
Arena::CreateMaybeMessage< ::nt::communication::StrangerSearchResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::StrangerSearchResp >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::communication::StrangerSearchRespField1*
Arena::CreateMaybeMessage< ::nt::communication::StrangerSearchRespField1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::communication::StrangerSearchRespField1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
