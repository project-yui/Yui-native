// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace nt_msg {
PROTOBUF_CONSTEXPR Element_SourceMsgTextElem::Element_SourceMsgTextElem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.textelemcontent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unknown_45001_)*/int64_t{0}
  , /*decltype(_impl_.replyabselemtype_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Element_SourceMsgTextElemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Element_SourceMsgTextElemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Element_SourceMsgTextElemDefaultTypeInternal() {}
  union {
    Element_SourceMsgTextElem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Element_SourceMsgTextElemDefaultTypeInternal _Element_SourceMsgTextElem_default_instance_;
PROTOBUF_CONSTEXPR Element::Element(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sourcemsgtextelems_)*/{}
  , /*decltype(_impl_.senderuidstr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.textstr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unknown_45406_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.fileuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.imageurl198_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.imageurl720_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.originimageurl_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.elementid_)*/int64_t{0}
  , /*decltype(_impl_.elementtype_)*/0
  , /*decltype(_impl_.attype_)*/0
  , /*decltype(_impl_.filesize_)*/0
  , /*decltype(_impl_.picwidth_)*/0
  , /*decltype(_impl_.picheight_)*/0
  , /*decltype(_impl_.unknown_45413_)*/0
  , /*decltype(_impl_.unknown_45414_)*/0
  , /*decltype(_impl_.pictype_)*/0
  , /*decltype(_impl_.unknown_45418_)*/0
  , /*decltype(_impl_.unknown_45805_)*/0
  , /*decltype(_impl_.unknown_45806_)*/0
  , /*decltype(_impl_.unknown_45807_)*/0
  , /*decltype(_impl_.unknown_45829_)*/0
  , /*decltype(_impl_.replaymsgseq_)*/0
  , /*decltype(_impl_.senderuid_)*/0
  , /*decltype(_impl_.replymsgtime_)*/0
  , /*decltype(_impl_.unknown_47416_)*/int64_t{0}
  , /*decltype(_impl_.unknown_47422_)*/int64_t{0}
  , /*decltype(_impl_.unknown_47411_)*/0} {}
struct ElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElementDefaultTypeInternal() {}
  union {
    Element _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElementDefaultTypeInternal _Element_default_instance_;
PROTOBUF_CONSTEXPR Elements::Elements(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.elem_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ElementsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElementsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElementsDefaultTypeInternal() {}
  union {
    Elements _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElementsDefaultTypeInternal _Elements_default_instance_;
}  // namespace nt_msg
static ::_pb::Metadata file_level_metadata_message_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_message_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const uint32_t TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element_SourceMsgTextElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element_SourceMsgTextElem, _impl_.unknown_45001_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element_SourceMsgTextElem, _impl_.replyabselemtype_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element_SourceMsgTextElem, _impl_.textelemcontent_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.elementid_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.elementtype_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.textstr_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.attype_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.filename_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.filesize_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45406_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.picwidth_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.picheight_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45413_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45414_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.pictype_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45418_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.fileuuid_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.imageurl198_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.imageurl720_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.originimageurl_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45805_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45806_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45807_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_45829_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.senderuidstr_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.replaymsgseq_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.senderuid_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.replymsgtime_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_47411_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_47416_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.unknown_47422_),
  PROTOBUF_FIELD_OFFSET(::nt_msg::Element, _impl_.sourcemsgtextelems_),
  ~0u,
  ~0u,
  1,
  8,
  2,
  9,
  3,
  10,
  11,
  12,
  13,
  14,
  15,
  4,
  5,
  6,
  7,
  16,
  17,
  18,
  19,
  0,
  20,
  21,
  22,
  25,
  23,
  24,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt_msg::Elements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt_msg::Elements, _impl_.elem_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::nt_msg::Element_SourceMsgTextElem)},
  { 9, 44, -1, sizeof(::nt_msg::Element)},
  { 73, -1, -1, sizeof(::nt_msg::Elements)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::nt_msg::_Element_SourceMsgTextElem_default_instance_._instance,
  &::nt_msg::_Element_default_instance_._instance,
  &::nt_msg::_Elements_default_instance_._instance,
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\022\006nt_msg\"\225\013\n\007Element\022\023\n\te"
  "lementId\030\311\337\002 \001(\003\022\025\n\013elementType\030\312\337\002 \001(\005\022"
  "\026\n\007textStr\030\255\340\002 \001(\tH\000\210\001\001\022\025\n\006atType\030\256\340\002 \001("
  "\005H\001\210\001\001\022\027\n\010fileName\030\332\342\002 \001(\tH\002\210\001\001\022\027\n\010fileS"
  "ize\030\335\342\002 \001(\005H\003\210\001\001\022\034\n\runknown_45406\030\336\342\002 \001("
  "\tH\004\210\001\001\022\027\n\010picWidth\030\343\342\002 \001(\005H\005\210\001\001\022\030\n\tpicHe"
  "ight\030\344\342\002 \001(\005H\006\210\001\001\022\034\n\runknown_45413\030\345\342\002 \001"
  "(\005H\007\210\001\001\022\034\n\runknown_45414\030\346\342\002 \001(\005H\010\210\001\001\022\026\n"
  "\007picType\030\350\342\002 \001(\005H\t\210\001\001\022\034\n\runknown_45418\030\352"
  "\342\002 \001(\005H\n\210\001\001\022\027\n\010fileUuid\030\277\343\002 \001(\tH\013\210\001\001\022\032\n\013"
  "imageUrl198\030\352\345\002 \001(\tH\014\210\001\001\022\032\n\013imageUrl720\030"
  "\353\345\002 \001(\tH\r\210\001\001\022\035\n\016originImageUrl\030\354\345\002 \001(\tH\016"
  "\210\001\001\022\034\n\runknown_45805\030\355\345\002 \001(\005H\017\210\001\001\022\034\n\runk"
  "nown_45806\030\356\345\002 \001(\005H\020\210\001\001\022\034\n\runknown_45807"
  "\030\357\345\002 \001(\005H\021\210\001\001\022\034\n\runknown_45829\030\205\346\002 \001(\005H\022"
  "\210\001\001\022\033\n\014senderUidStr\030\324\270\002 \001(\tH\023\210\001\001\022\033\n\014repl"
  "ayMsgSeq\030\252\362\002 \001(\005H\024\210\001\001\022\030\n\tsenderUid\030\253\362\002 \001"
  "(\005H\025\210\001\001\022\033\n\014replyMsgTime\030\254\362\002 \001(\005H\026\210\001\001\022\034\n\r"
  "unknown_47411\030\263\362\002 \001(\005H\027\210\001\001\022\034\n\runknown_47"
  "416\030\270\362\002 \001(\003H\030\210\001\001\022\034\n\runknown_47422\030\276\362\002 \001("
  "\003H\031\210\001\001\022\?\n\022sourceMsgTextElems\030\277\362\002 \003(\0132!.n"
  "t_msg.Element.SourceMsgTextElem\032c\n\021Sourc"
  "eMsgTextElem\022\027\n\runknown_45001\030\311\337\002 \001(\003\022\032\n"
  "\020replyAbsElemType\030\312\337\002 \001(\005\022\031\n\017textElemCon"
  "tent\030\255\340\002 \001(\t\"B\n\007MsgType\022\022\n\016MSG_TYPE_ERRO"
  "R\020\000\022\021\n\rMSG_TYPE_TEXT\020\001\022\020\n\014MSG_TYPE_PIC\020\002"
  "B\n\n\010_textStrB\t\n\007_atTypeB\013\n\t_fileNameB\013\n\t"
  "_fileSizeB\020\n\016_unknown_45406B\013\n\t_picWidth"
  "B\014\n\n_picHeightB\020\n\016_unknown_45413B\020\n\016_unk"
  "nown_45414B\n\n\010_picTypeB\020\n\016_unknown_45418"
  "B\013\n\t_fileUuidB\016\n\014_imageUrl198B\016\n\014_imageU"
  "rl720B\021\n\017_originImageUrlB\020\n\016_unknown_458"
  "05B\020\n\016_unknown_45806B\020\n\016_unknown_45807B\020"
  "\n\016_unknown_45829B\017\n\r_senderUidStrB\017\n\r_re"
  "playMsgSeqB\014\n\n_senderUidB\017\n\r_replyMsgTim"
  "eB\020\n\016_unknown_47411B\020\n\016_unknown_47416B\020\n"
  "\016_unknown_47422\"+\n\010Elements\022\037\n\004elem\030\340\276\002 "
  "\003(\0132\017.nt_msg.Elementb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false, false, 1508, descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto, file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);
namespace nt_msg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Element_MsgType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
bool Element_MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Element_MsgType Element::MSG_TYPE_ERROR;
constexpr Element_MsgType Element::MSG_TYPE_TEXT;
constexpr Element_MsgType Element::MSG_TYPE_PIC;
constexpr Element_MsgType Element::MsgType_MIN;
constexpr Element_MsgType Element::MsgType_MAX;
constexpr int Element::MsgType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Element_SourceMsgTextElem::_Internal {
 public:
};

Element_SourceMsgTextElem::Element_SourceMsgTextElem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt_msg.Element.SourceMsgTextElem)
}
Element_SourceMsgTextElem::Element_SourceMsgTextElem(const Element_SourceMsgTextElem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Element_SourceMsgTextElem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.textelemcontent_){}
    , decltype(_impl_.unknown_45001_){}
    , decltype(_impl_.replyabselemtype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.textelemcontent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.textelemcontent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_textelemcontent().empty()) {
    _this->_impl_.textelemcontent_.Set(from._internal_textelemcontent(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.unknown_45001_, &from._impl_.unknown_45001_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.replyabselemtype_) -
    reinterpret_cast<char*>(&_impl_.unknown_45001_)) + sizeof(_impl_.replyabselemtype_));
  // @@protoc_insertion_point(copy_constructor:nt_msg.Element.SourceMsgTextElem)
}

inline void Element_SourceMsgTextElem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.textelemcontent_){}
    , decltype(_impl_.unknown_45001_){int64_t{0}}
    , decltype(_impl_.replyabselemtype_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.textelemcontent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.textelemcontent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Element_SourceMsgTextElem::~Element_SourceMsgTextElem() {
  // @@protoc_insertion_point(destructor:nt_msg.Element.SourceMsgTextElem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Element_SourceMsgTextElem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.textelemcontent_.Destroy();
}

void Element_SourceMsgTextElem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Element_SourceMsgTextElem::Clear() {
// @@protoc_insertion_point(message_clear_start:nt_msg.Element.SourceMsgTextElem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.textelemcontent_.ClearToEmpty();
  ::memset(&_impl_.unknown_45001_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.replyabselemtype_) -
      reinterpret_cast<char*>(&_impl_.unknown_45001_)) + sizeof(_impl_.replyabselemtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Element_SourceMsgTextElem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 unknown_45001 = 45001;
      case 45001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.unknown_45001_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 replyAbsElemType = 45002;
      case 45002:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.replyabselemtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string textElemContent = 45101;
      case 45101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_textelemcontent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.SourceMsgTextElem.textElemContent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Element_SourceMsgTextElem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt_msg.Element.SourceMsgTextElem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 unknown_45001 = 45001;
  if (this->_internal_unknown_45001() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(45001, this->_internal_unknown_45001(), target);
  }

  // int32 replyAbsElemType = 45002;
  if (this->_internal_replyabselemtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45002, this->_internal_replyabselemtype(), target);
  }

  // string textElemContent = 45101;
  if (!this->_internal_textelemcontent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_textelemcontent().data(), static_cast<int>(this->_internal_textelemcontent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.SourceMsgTextElem.textElemContent");
    target = stream->WriteStringMaybeAliased(
        45101, this->_internal_textelemcontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt_msg.Element.SourceMsgTextElem)
  return target;
}

size_t Element_SourceMsgTextElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt_msg.Element.SourceMsgTextElem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string textElemContent = 45101;
  if (!this->_internal_textelemcontent().empty()) {
    total_size += 3 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_textelemcontent());
  }

  // int64 unknown_45001 = 45001;
  if (this->_internal_unknown_45001() != 0) {
    total_size += 3 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_unknown_45001());
  }

  // int32 replyAbsElemType = 45002;
  if (this->_internal_replyabselemtype() != 0) {
    total_size += 3 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_replyabselemtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Element_SourceMsgTextElem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Element_SourceMsgTextElem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Element_SourceMsgTextElem::GetClassData() const { return &_class_data_; }


void Element_SourceMsgTextElem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Element_SourceMsgTextElem*>(&to_msg);
  auto& from = static_cast<const Element_SourceMsgTextElem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt_msg.Element.SourceMsgTextElem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_textelemcontent().empty()) {
    _this->_internal_set_textelemcontent(from._internal_textelemcontent());
  }
  if (from._internal_unknown_45001() != 0) {
    _this->_internal_set_unknown_45001(from._internal_unknown_45001());
  }
  if (from._internal_replyabselemtype() != 0) {
    _this->_internal_set_replyabselemtype(from._internal_replyabselemtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Element_SourceMsgTextElem::CopyFrom(const Element_SourceMsgTextElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt_msg.Element.SourceMsgTextElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element_SourceMsgTextElem::IsInitialized() const {
  return true;
}

void Element_SourceMsgTextElem::InternalSwap(Element_SourceMsgTextElem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.textelemcontent_, lhs_arena,
      &other->_impl_.textelemcontent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Element_SourceMsgTextElem, _impl_.replyabselemtype_)
      + sizeof(Element_SourceMsgTextElem::_impl_.replyabselemtype_)
      - PROTOBUF_FIELD_OFFSET(Element_SourceMsgTextElem, _impl_.unknown_45001_)>(
          reinterpret_cast<char*>(&_impl_.unknown_45001_),
          reinterpret_cast<char*>(&other->_impl_.unknown_45001_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Element_SourceMsgTextElem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}

// ===================================================================

class Element::_Internal {
 public:
  using HasBits = decltype(std::declval<Element>()._impl_._has_bits_);
  static void set_has_textstr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_attype(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_filesize(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_unknown_45406(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_picwidth(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_picheight(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_unknown_45413(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_unknown_45414(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_pictype(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_unknown_45418(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_fileuuid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_imageurl198(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_imageurl720(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_originimageurl(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_unknown_45805(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_unknown_45806(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_unknown_45807(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_unknown_45829(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_senderuidstr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_replaymsgseq(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_senderuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_replymsgtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_unknown_47411(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_unknown_47416(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_unknown_47422(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
};

Element::Element(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt_msg.Element)
}
Element::Element(const Element& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Element* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sourcemsgtextelems_){from._impl_.sourcemsgtextelems_}
    , decltype(_impl_.senderuidstr_){}
    , decltype(_impl_.textstr_){}
    , decltype(_impl_.filename_){}
    , decltype(_impl_.unknown_45406_){}
    , decltype(_impl_.fileuuid_){}
    , decltype(_impl_.imageurl198_){}
    , decltype(_impl_.imageurl720_){}
    , decltype(_impl_.originimageurl_){}
    , decltype(_impl_.elementid_){}
    , decltype(_impl_.elementtype_){}
    , decltype(_impl_.attype_){}
    , decltype(_impl_.filesize_){}
    , decltype(_impl_.picwidth_){}
    , decltype(_impl_.picheight_){}
    , decltype(_impl_.unknown_45413_){}
    , decltype(_impl_.unknown_45414_){}
    , decltype(_impl_.pictype_){}
    , decltype(_impl_.unknown_45418_){}
    , decltype(_impl_.unknown_45805_){}
    , decltype(_impl_.unknown_45806_){}
    , decltype(_impl_.unknown_45807_){}
    , decltype(_impl_.unknown_45829_){}
    , decltype(_impl_.replaymsgseq_){}
    , decltype(_impl_.senderuid_){}
    , decltype(_impl_.replymsgtime_){}
    , decltype(_impl_.unknown_47416_){}
    , decltype(_impl_.unknown_47422_){}
    , decltype(_impl_.unknown_47411_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.senderuidstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.senderuidstr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_senderuidstr()) {
    _this->_impl_.senderuidstr_.Set(from._internal_senderuidstr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.textstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.textstr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_textstr()) {
    _this->_impl_.textstr_.Set(from._internal_textstr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filename()) {
    _this->_impl_.filename_.Set(from._internal_filename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unknown_45406_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_45406_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_unknown_45406()) {
    _this->_impl_.unknown_45406_.Set(from._internal_unknown_45406(), 
      _this->GetArenaForAllocation());
  }
  _impl_.fileuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.fileuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_fileuuid()) {
    _this->_impl_.fileuuid_.Set(from._internal_fileuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.imageurl198_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.imageurl198_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_imageurl198()) {
    _this->_impl_.imageurl198_.Set(from._internal_imageurl198(), 
      _this->GetArenaForAllocation());
  }
  _impl_.imageurl720_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.imageurl720_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_imageurl720()) {
    _this->_impl_.imageurl720_.Set(from._internal_imageurl720(), 
      _this->GetArenaForAllocation());
  }
  _impl_.originimageurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.originimageurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_originimageurl()) {
    _this->_impl_.originimageurl_.Set(from._internal_originimageurl(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.elementid_, &from._impl_.elementid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_47411_) -
    reinterpret_cast<char*>(&_impl_.elementid_)) + sizeof(_impl_.unknown_47411_));
  // @@protoc_insertion_point(copy_constructor:nt_msg.Element)
}

inline void Element::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sourcemsgtextelems_){arena}
    , decltype(_impl_.senderuidstr_){}
    , decltype(_impl_.textstr_){}
    , decltype(_impl_.filename_){}
    , decltype(_impl_.unknown_45406_){}
    , decltype(_impl_.fileuuid_){}
    , decltype(_impl_.imageurl198_){}
    , decltype(_impl_.imageurl720_){}
    , decltype(_impl_.originimageurl_){}
    , decltype(_impl_.elementid_){int64_t{0}}
    , decltype(_impl_.elementtype_){0}
    , decltype(_impl_.attype_){0}
    , decltype(_impl_.filesize_){0}
    , decltype(_impl_.picwidth_){0}
    , decltype(_impl_.picheight_){0}
    , decltype(_impl_.unknown_45413_){0}
    , decltype(_impl_.unknown_45414_){0}
    , decltype(_impl_.pictype_){0}
    , decltype(_impl_.unknown_45418_){0}
    , decltype(_impl_.unknown_45805_){0}
    , decltype(_impl_.unknown_45806_){0}
    , decltype(_impl_.unknown_45807_){0}
    , decltype(_impl_.unknown_45829_){0}
    , decltype(_impl_.replaymsgseq_){0}
    , decltype(_impl_.senderuid_){0}
    , decltype(_impl_.replymsgtime_){0}
    , decltype(_impl_.unknown_47416_){int64_t{0}}
    , decltype(_impl_.unknown_47422_){int64_t{0}}
    , decltype(_impl_.unknown_47411_){0}
  };
  _impl_.senderuidstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.senderuidstr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.textstr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.textstr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unknown_45406_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_45406_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.fileuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.fileuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.imageurl198_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.imageurl198_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.imageurl720_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.imageurl720_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.originimageurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.originimageurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Element::~Element() {
  // @@protoc_insertion_point(destructor:nt_msg.Element)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Element::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sourcemsgtextelems_.~RepeatedPtrField();
  _impl_.senderuidstr_.Destroy();
  _impl_.textstr_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.unknown_45406_.Destroy();
  _impl_.fileuuid_.Destroy();
  _impl_.imageurl198_.Destroy();
  _impl_.imageurl720_.Destroy();
  _impl_.originimageurl_.Destroy();
}

void Element::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Element::Clear() {
// @@protoc_insertion_point(message_clear_start:nt_msg.Element)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sourcemsgtextelems_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.senderuidstr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.textstr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.unknown_45406_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.fileuuid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.imageurl198_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.imageurl720_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.originimageurl_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.elementid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.elementtype_) -
      reinterpret_cast<char*>(&_impl_.elementid_)) + sizeof(_impl_.elementtype_));
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.attype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_45418_) -
        reinterpret_cast<char*>(&_impl_.attype_)) + sizeof(_impl_.unknown_45418_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.unknown_45805_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_47416_) -
        reinterpret_cast<char*>(&_impl_.unknown_45805_)) + sizeof(_impl_.unknown_47416_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&_impl_.unknown_47422_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_47411_) -
        reinterpret_cast<char*>(&_impl_.unknown_47422_)) + sizeof(_impl_.unknown_47411_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Element::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string senderUidStr = 40020;
      case 40020:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          auto str = _internal_mutable_senderuidstr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.senderUidStr"));
        } else
          goto handle_unusual;
        continue;
      // int64 elementId = 45001;
      case 45001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.elementid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 elementType = 45002;
      case 45002:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.elementtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string textStr = 45101;
      case 45101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_textstr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.textStr"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 atType = 45102;
      case 45102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_attype(&has_bits);
          _impl_.attype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string fileName = 45402;
      case 45402:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          auto str = _internal_mutable_filename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.fileName"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 fileSize = 45405;
      case 45405:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          _Internal::set_has_filesize(&has_bits);
          _impl_.filesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string unknown_45406 = 45406;
      case 45406:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          auto str = _internal_mutable_unknown_45406();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.unknown_45406"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 picWidth = 45411;
      case 45411:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_picwidth(&has_bits);
          _impl_.picwidth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 picHeight = 45412;
      case 45412:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_picheight(&has_bits);
          _impl_.picheight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45413 = 45413;
      case 45413:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unknown_45413(&has_bits);
          _impl_.unknown_45413_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45414 = 45414;
      case 45414:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_unknown_45414(&has_bits);
          _impl_.unknown_45414_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 picType = 45416;
      case 45416:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_pictype(&has_bits);
          _impl_.pictype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45418 = 45418;
      case 45418:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_unknown_45418(&has_bits);
          _impl_.unknown_45418_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string fileUuid = 45503;
      case 45503:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          auto str = _internal_mutable_fileuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.fileUuid"));
        } else
          goto handle_unusual;
        continue;
      // optional string imageUrl198 = 45802;
      case 45802:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_imageurl198();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.imageUrl198"));
        } else
          goto handle_unusual;
        continue;
      // optional string imageUrl720 = 45803;
      case 45803:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_imageurl720();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.imageUrl720"));
        } else
          goto handle_unusual;
        continue;
      // optional string originImageUrl = 45804;
      case 45804:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_originimageurl();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt_msg.Element.originImageUrl"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45805 = 45805;
      case 45805:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_unknown_45805(&has_bits);
          _impl_.unknown_45805_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45806 = 45806;
      case 45806:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_unknown_45806(&has_bits);
          _impl_.unknown_45806_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45807 = 45807;
      case 45807:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_unknown_45807(&has_bits);
          _impl_.unknown_45807_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_45829 = 45829;
      case 45829:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unknown_45829(&has_bits);
          _impl_.unknown_45829_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 replayMsgSeq = 47402;
      case 47402:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_replaymsgseq(&has_bits);
          _impl_.replaymsgseq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 senderUid = 47403;
      case 47403:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_senderuid(&has_bits);
          _impl_.senderuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 replyMsgTime = 47404;
      case 47404:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_replymsgtime(&has_bits);
          _impl_.replymsgtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 unknown_47411 = 47411;
      case 47411:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _Internal::set_has_unknown_47411(&has_bits);
          _impl_.unknown_47411_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_47416 = 47416;
      case 47416:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_unknown_47416(&has_bits);
          _impl_.unknown_47416_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_47422 = 47422;
      case 47422:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_unknown_47422(&has_bits);
          _impl_.unknown_47422_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .nt_msg.Element.SourceMsgTextElem sourceMsgTextElems = 47423;
      case 47423:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_add_sourcemsgtextelems(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Element::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt_msg.Element)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string senderUidStr = 40020;
  if (_internal_has_senderuidstr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_senderuidstr().data(), static_cast<int>(this->_internal_senderuidstr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.senderUidStr");
    target = stream->WriteStringMaybeAliased(
        40020, this->_internal_senderuidstr(), target);
  }

  // int64 elementId = 45001;
  if (this->_internal_elementid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(45001, this->_internal_elementid(), target);
  }

  // int32 elementType = 45002;
  if (this->_internal_elementtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45002, this->_internal_elementtype(), target);
  }

  // optional string textStr = 45101;
  if (_internal_has_textstr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_textstr().data(), static_cast<int>(this->_internal_textstr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.textStr");
    target = stream->WriteStringMaybeAliased(
        45101, this->_internal_textstr(), target);
  }

  // optional int32 atType = 45102;
  if (_internal_has_attype()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45102, this->_internal_attype(), target);
  }

  // optional string fileName = 45402;
  if (_internal_has_filename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.fileName");
    target = stream->WriteStringMaybeAliased(
        45402, this->_internal_filename(), target);
  }

  // optional int32 fileSize = 45405;
  if (_internal_has_filesize()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45405, this->_internal_filesize(), target);
  }

  // optional string unknown_45406 = 45406;
  if (_internal_has_unknown_45406()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unknown_45406().data(), static_cast<int>(this->_internal_unknown_45406().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.unknown_45406");
    target = stream->WriteStringMaybeAliased(
        45406, this->_internal_unknown_45406(), target);
  }

  // optional int32 picWidth = 45411;
  if (_internal_has_picwidth()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45411, this->_internal_picwidth(), target);
  }

  // optional int32 picHeight = 45412;
  if (_internal_has_picheight()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45412, this->_internal_picheight(), target);
  }

  // optional int32 unknown_45413 = 45413;
  if (_internal_has_unknown_45413()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45413, this->_internal_unknown_45413(), target);
  }

  // optional int32 unknown_45414 = 45414;
  if (_internal_has_unknown_45414()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45414, this->_internal_unknown_45414(), target);
  }

  // optional int32 picType = 45416;
  if (_internal_has_pictype()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45416, this->_internal_pictype(), target);
  }

  // optional int32 unknown_45418 = 45418;
  if (_internal_has_unknown_45418()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45418, this->_internal_unknown_45418(), target);
  }

  // optional string fileUuid = 45503;
  if (_internal_has_fileuuid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fileuuid().data(), static_cast<int>(this->_internal_fileuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.fileUuid");
    target = stream->WriteStringMaybeAliased(
        45503, this->_internal_fileuuid(), target);
  }

  // optional string imageUrl198 = 45802;
  if (_internal_has_imageurl198()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imageurl198().data(), static_cast<int>(this->_internal_imageurl198().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.imageUrl198");
    target = stream->WriteStringMaybeAliased(
        45802, this->_internal_imageurl198(), target);
  }

  // optional string imageUrl720 = 45803;
  if (_internal_has_imageurl720()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imageurl720().data(), static_cast<int>(this->_internal_imageurl720().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.imageUrl720");
    target = stream->WriteStringMaybeAliased(
        45803, this->_internal_imageurl720(), target);
  }

  // optional string originImageUrl = 45804;
  if (_internal_has_originimageurl()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_originimageurl().data(), static_cast<int>(this->_internal_originimageurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt_msg.Element.originImageUrl");
    target = stream->WriteStringMaybeAliased(
        45804, this->_internal_originimageurl(), target);
  }

  // optional int32 unknown_45805 = 45805;
  if (_internal_has_unknown_45805()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45805, this->_internal_unknown_45805(), target);
  }

  // optional int32 unknown_45806 = 45806;
  if (_internal_has_unknown_45806()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45806, this->_internal_unknown_45806(), target);
  }

  // optional int32 unknown_45807 = 45807;
  if (_internal_has_unknown_45807()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45807, this->_internal_unknown_45807(), target);
  }

  // optional int32 unknown_45829 = 45829;
  if (_internal_has_unknown_45829()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(45829, this->_internal_unknown_45829(), target);
  }

  // optional int32 replayMsgSeq = 47402;
  if (_internal_has_replaymsgseq()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(47402, this->_internal_replaymsgseq(), target);
  }

  // optional int32 senderUid = 47403;
  if (_internal_has_senderuid()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(47403, this->_internal_senderuid(), target);
  }

  // optional int32 replyMsgTime = 47404;
  if (_internal_has_replymsgtime()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(47404, this->_internal_replymsgtime(), target);
  }

  // optional int32 unknown_47411 = 47411;
  if (_internal_has_unknown_47411()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(47411, this->_internal_unknown_47411(), target);
  }

  // optional int64 unknown_47416 = 47416;
  if (_internal_has_unknown_47416()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(47416, this->_internal_unknown_47416(), target);
  }

  // optional int64 unknown_47422 = 47422;
  if (_internal_has_unknown_47422()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(47422, this->_internal_unknown_47422(), target);
  }

  // repeated .nt_msg.Element.SourceMsgTextElem sourceMsgTextElems = 47423;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sourcemsgtextelems_size()); i < n; i++) {
    const auto& repfield = this->_internal_sourcemsgtextelems(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(47423, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt_msg.Element)
  return target;
}

size_t Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt_msg.Element)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nt_msg.Element.SourceMsgTextElem sourceMsgTextElems = 47423;
  total_size += 3UL * this->_internal_sourcemsgtextelems_size();
  for (const auto& msg : this->_impl_.sourcemsgtextelems_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string senderUidStr = 40020;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_senderuidstr());
    }

    // optional string textStr = 45101;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_textstr());
    }

    // optional string fileName = 45402;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filename());
    }

    // optional string unknown_45406 = 45406;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_unknown_45406());
    }

    // optional string fileUuid = 45503;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_fileuuid());
    }

    // optional string imageUrl198 = 45802;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_imageurl198());
    }

    // optional string imageUrl720 = 45803;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_imageurl720());
    }

    // optional string originImageUrl = 45804;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_originimageurl());
    }

  }
  // int64 elementId = 45001;
  if (this->_internal_elementid() != 0) {
    total_size += 3 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_elementid());
  }

  // int32 elementType = 45002;
  if (this->_internal_elementtype() != 0) {
    total_size += 3 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_elementtype());
  }

  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 atType = 45102;
    if (cached_has_bits & 0x00000100u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_attype());
    }

    // optional int32 fileSize = 45405;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_filesize());
    }

    // optional int32 picWidth = 45411;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_picwidth());
    }

    // optional int32 picHeight = 45412;
    if (cached_has_bits & 0x00000800u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_picheight());
    }

    // optional int32 unknown_45413 = 45413;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45413());
    }

    // optional int32 unknown_45414 = 45414;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45414());
    }

    // optional int32 picType = 45416;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_pictype());
    }

    // optional int32 unknown_45418 = 45418;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45418());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 unknown_45805 = 45805;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45805());
    }

    // optional int32 unknown_45806 = 45806;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45806());
    }

    // optional int32 unknown_45807 = 45807;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45807());
    }

    // optional int32 unknown_45829 = 45829;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_45829());
    }

    // optional int32 replayMsgSeq = 47402;
    if (cached_has_bits & 0x00100000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_replaymsgseq());
    }

    // optional int32 senderUid = 47403;
    if (cached_has_bits & 0x00200000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_senderuid());
    }

    // optional int32 replyMsgTime = 47404;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_replymsgtime());
    }

    // optional int64 unknown_47416 = 47416;
    if (cached_has_bits & 0x00800000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int64Size(
          this->_internal_unknown_47416());
    }

  }
  if (cached_has_bits & 0x03000000u) {
    // optional int64 unknown_47422 = 47422;
    if (cached_has_bits & 0x01000000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int64Size(
          this->_internal_unknown_47422());
    }

    // optional int32 unknown_47411 = 47411;
    if (cached_has_bits & 0x02000000u) {
      total_size += 3 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_unknown_47411());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Element::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Element::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Element::GetClassData() const { return &_class_data_; }


void Element::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Element*>(&to_msg);
  auto& from = static_cast<const Element&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt_msg.Element)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sourcemsgtextelems_.MergeFrom(from._impl_.sourcemsgtextelems_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_senderuidstr(from._internal_senderuidstr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_textstr(from._internal_textstr());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_unknown_45406(from._internal_unknown_45406());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_fileuuid(from._internal_fileuuid());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_imageurl198(from._internal_imageurl198());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_imageurl720(from._internal_imageurl720());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_originimageurl(from._internal_originimageurl());
    }
  }
  if (from._internal_elementid() != 0) {
    _this->_internal_set_elementid(from._internal_elementid());
  }
  if (from._internal_elementtype() != 0) {
    _this->_internal_set_elementtype(from._internal_elementtype());
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.attype_ = from._impl_.attype_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.filesize_ = from._impl_.filesize_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.picwidth_ = from._impl_.picwidth_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.picheight_ = from._impl_.picheight_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.unknown_45413_ = from._impl_.unknown_45413_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.unknown_45414_ = from._impl_.unknown_45414_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.pictype_ = from._impl_.pictype_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.unknown_45418_ = from._impl_.unknown_45418_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.unknown_45805_ = from._impl_.unknown_45805_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.unknown_45806_ = from._impl_.unknown_45806_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.unknown_45807_ = from._impl_.unknown_45807_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.unknown_45829_ = from._impl_.unknown_45829_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.replaymsgseq_ = from._impl_.replaymsgseq_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.senderuid_ = from._impl_.senderuid_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.replymsgtime_ = from._impl_.replymsgtime_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.unknown_47416_ = from._impl_.unknown_47416_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.unknown_47422_ = from._impl_.unknown_47422_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.unknown_47411_ = from._impl_.unknown_47411_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Element::CopyFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt_msg.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element::IsInitialized() const {
  return true;
}

void Element::InternalSwap(Element* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sourcemsgtextelems_.InternalSwap(&other->_impl_.sourcemsgtextelems_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.senderuidstr_, lhs_arena,
      &other->_impl_.senderuidstr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.textstr_, lhs_arena,
      &other->_impl_.textstr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filename_, lhs_arena,
      &other->_impl_.filename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unknown_45406_, lhs_arena,
      &other->_impl_.unknown_45406_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.fileuuid_, lhs_arena,
      &other->_impl_.fileuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.imageurl198_, lhs_arena,
      &other->_impl_.imageurl198_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.imageurl720_, lhs_arena,
      &other->_impl_.imageurl720_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.originimageurl_, lhs_arena,
      &other->_impl_.originimageurl_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Element, _impl_.unknown_47411_)
      + sizeof(Element::_impl_.unknown_47411_)
      - PROTOBUF_FIELD_OFFSET(Element, _impl_.elementid_)>(
          reinterpret_cast<char*>(&_impl_.elementid_),
          reinterpret_cast<char*>(&other->_impl_.elementid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Element::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}

// ===================================================================

class Elements::_Internal {
 public:
};

Elements::Elements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt_msg.Elements)
}
Elements::Elements(const Elements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Elements* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.elem_){from._impl_.elem_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nt_msg.Elements)
}

inline void Elements::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.elem_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Elements::~Elements() {
  // @@protoc_insertion_point(destructor:nt_msg.Elements)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Elements::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.elem_.~RepeatedPtrField();
}

void Elements::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Elements::Clear() {
// @@protoc_insertion_point(message_clear_start:nt_msg.Elements)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elem_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Elements::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .nt_msg.Element elem = 40800;
      case 40800:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_add_elem(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Elements::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt_msg.Elements)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nt_msg.Element elem = 40800;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elem_size()); i < n; i++) {
    const auto& repfield = this->_internal_elem(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(40800, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt_msg.Elements)
  return target;
}

size_t Elements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt_msg.Elements)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nt_msg.Element elem = 40800;
  total_size += 3UL * this->_internal_elem_size();
  for (const auto& msg : this->_impl_.elem_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Elements::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Elements::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Elements::GetClassData() const { return &_class_data_; }


void Elements::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Elements*>(&to_msg);
  auto& from = static_cast<const Elements&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt_msg.Elements)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.elem_.MergeFrom(from._impl_.elem_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Elements::CopyFrom(const Elements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt_msg.Elements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Elements::IsInitialized() const {
  return true;
}

void Elements::InternalSwap(Elements* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.elem_.InternalSwap(&other->_impl_.elem_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Elements::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace nt_msg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nt_msg::Element_SourceMsgTextElem*
Arena::CreateMaybeMessage< ::nt_msg::Element_SourceMsgTextElem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt_msg::Element_SourceMsgTextElem >(arena);
}
template<> PROTOBUF_NOINLINE ::nt_msg::Element*
Arena::CreateMaybeMessage< ::nt_msg::Element >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt_msg::Element >(arena);
}
template<> PROTOBUF_NOINLINE ::nt_msg::Elements*
Arena::CreateMaybeMessage< ::nt_msg::Elements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt_msg::Elements >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
