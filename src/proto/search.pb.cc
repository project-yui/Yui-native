// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search.proto

#include "search.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace nt {
namespace search {
PROTOBUF_CONSTEXPR Stranger::Stranger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_.command_)*/0
  , /*decltype(_impl_.subcommand_)*/0} {}
struct StrangerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrangerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrangerDefaultTypeInternal() {}
  union {
    Stranger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrangerDefaultTypeInternal _Stranger_default_instance_;
PROTOBUF_CONSTEXPR Body::Body(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.targetuin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.settings_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BodyDefaultTypeInternal() {}
  union {
    Body _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BodyDefaultTypeInternal _Body_default_instance_;
PROTOBUF_CONSTEXPR Settings::Settings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filed11_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.setting_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filed4_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsDefaultTypeInternal() {}
  union {
    Settings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsDefaultTypeInternal _Settings_default_instance_;
}  // namespace search
}  // namespace nt
static ::_pb::Metadata file_level_metadata_search_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_search_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_search_2eproto = nullptr;

const uint32_t TableStruct_search_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::nt::search::Stranger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Stranger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::search::Stranger, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Stranger, _impl_.subcommand_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Stranger, _impl_.body_),
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt::search::Body, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::search::Body, _impl_.targetuin_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Body, _impl_.settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nt::search::Settings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::nt::search::Settings, _impl_.filed4_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Settings, _impl_.filed11_),
  PROTOBUF_FIELD_OFFSET(::nt::search::Settings, _impl_.setting_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::nt::search::Stranger)},
  { 12, -1, -1, sizeof(::nt::search::Body)},
  { 20, -1, -1, sizeof(::nt::search::Settings)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::nt::search::_Stranger_default_instance_._instance,
  &::nt::search::_Body_default_instance_._instance,
  &::nt::search::_Settings_default_instance_._instance,
};

const char descriptor_table_protodef_search_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014search.proto\022\tnt.search\"s\n\010Stranger\022\024\n"
  "\007command\030\001 \001(\005H\000\210\001\001\022\027\n\nsubCommand\030\002 \001(\005H"
  "\001\210\001\001\022\035\n\004body\030\004 \001(\0132\017.nt.search.BodyB\n\n\010_"
  "commandB\r\n\013_subCommand\"@\n\004Body\022\021\n\ttarget"
  "Uin\030\001 \001(\t\022%\n\010settings\030\003 \001(\0132\023.nt.search."
  "Settings\"<\n\010Settings\022\016\n\006filed4\030\004 \001(\r\022\017\n\007"
  "filed11\030\013 \001(\t\022\017\n\007setting\0307 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_search_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_search_2eproto = {
    false, false, 278, descriptor_table_protodef_search_2eproto,
    "search.proto",
    &descriptor_table_search_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_search_2eproto::offsets,
    file_level_metadata_search_2eproto, file_level_enum_descriptors_search_2eproto,
    file_level_service_descriptors_search_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_search_2eproto_getter() {
  return &descriptor_table_search_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_search_2eproto(&descriptor_table_search_2eproto);
namespace nt {
namespace search {

// ===================================================================

class Stranger::_Internal {
 public:
  using HasBits = decltype(std::declval<Stranger>()._impl_._has_bits_);
  static void set_has_command(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subcommand(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::nt::search::Body& body(const Stranger* msg);
};

const ::nt::search::Body&
Stranger::_Internal::body(const Stranger* msg) {
  return *msg->_impl_.body_;
}
Stranger::Stranger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.search.Stranger)
}
Stranger::Stranger(const Stranger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Stranger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.body_){nullptr}
    , decltype(_impl_.command_){}
    , decltype(_impl_.subcommand_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::nt::search::Body(*from._impl_.body_);
  }
  ::memcpy(&_impl_.command_, &from._impl_.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.subcommand_) -
    reinterpret_cast<char*>(&_impl_.command_)) + sizeof(_impl_.subcommand_));
  // @@protoc_insertion_point(copy_constructor:nt.search.Stranger)
}

inline void Stranger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.body_){nullptr}
    , decltype(_impl_.command_){0}
    , decltype(_impl_.subcommand_){0}
  };
}

Stranger::~Stranger() {
  // @@protoc_insertion_point(destructor:nt.search.Stranger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Stranger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.body_;
}

void Stranger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Stranger::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.search.Stranger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.subcommand_) -
        reinterpret_cast<char*>(&_impl_.command_)) + sizeof(_impl_.subcommand_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stranger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_command(&has_bits);
          _impl_.command_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 subCommand = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_subcommand(&has_bits);
          _impl_.subcommand_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .nt.search.Body body = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Stranger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.search.Stranger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 command = 1;
  if (_internal_has_command()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_command(), target);
  }

  // optional int32 subCommand = 2;
  if (_internal_has_subcommand()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_subcommand(), target);
  }

  // .nt.search.Body body = 4;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.search.Stranger)
  return target;
}

size_t Stranger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.search.Stranger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .nt.search.Body body = 4;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 command = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_command());
    }

    // optional int32 subCommand = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_subcommand());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Stranger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Stranger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Stranger::GetClassData() const { return &_class_data_; }


void Stranger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Stranger*>(&to_msg);
  auto& from = static_cast<const Stranger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.search.Stranger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::nt::search::Body::MergeFrom(
        from._internal_body());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.command_ = from._impl_.command_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.subcommand_ = from._impl_.subcommand_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Stranger::CopyFrom(const Stranger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.search.Stranger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stranger::IsInitialized() const {
  return true;
}

void Stranger::InternalSwap(Stranger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Stranger, _impl_.subcommand_)
      + sizeof(Stranger::_impl_.subcommand_)
      - PROTOBUF_FIELD_OFFSET(Stranger, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Stranger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_search_2eproto_getter, &descriptor_table_search_2eproto_once,
      file_level_metadata_search_2eproto[0]);
}

// ===================================================================

class Body::_Internal {
 public:
  static const ::nt::search::Settings& settings(const Body* msg);
};

const ::nt::search::Settings&
Body::_Internal::settings(const Body* msg) {
  return *msg->_impl_.settings_;
}
Body::Body(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.search.Body)
}
Body::Body(const Body& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Body* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuin_){}
    , decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.targetuin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetuin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_targetuin().empty()) {
    _this->_impl_.targetuin_.Set(from._internal_targetuin(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_settings()) {
    _this->_impl_.settings_ = new ::nt::search::Settings(*from._impl_.settings_);
  }
  // @@protoc_insertion_point(copy_constructor:nt.search.Body)
}

inline void Body::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuin_){}
    , decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.targetuin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetuin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Body::~Body() {
  // @@protoc_insertion_point(destructor:nt.search.Body)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Body::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.targetuin_.Destroy();
  if (this != internal_default_instance()) delete _impl_.settings_;
}

void Body::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Body::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.search.Body)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetuin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.settings_ != nullptr) {
    delete _impl_.settings_;
  }
  _impl_.settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Body::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string targetUin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_targetuin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.search.Body.targetUin"));
        } else
          goto handle_unusual;
        continue;
      // .nt.search.Settings settings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Body::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.search.Body)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetUin = 1;
  if (!this->_internal_targetuin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetuin().data(), static_cast<int>(this->_internal_targetuin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.search.Body.targetUin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_targetuin(), target);
  }

  // .nt.search.Settings settings = 3;
  if (this->_internal_has_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.search.Body)
  return target;
}

size_t Body::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.search.Body)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string targetUin = 1;
  if (!this->_internal_targetuin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetuin());
  }

  // .nt.search.Settings settings = 3;
  if (this->_internal_has_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Body::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Body::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Body::GetClassData() const { return &_class_data_; }


void Body::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Body*>(&to_msg);
  auto& from = static_cast<const Body&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.search.Body)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targetuin().empty()) {
    _this->_internal_set_targetuin(from._internal_targetuin());
  }
  if (from._internal_has_settings()) {
    _this->_internal_mutable_settings()->::nt::search::Settings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Body::CopyFrom(const Body& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.search.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Body::IsInitialized() const {
  return true;
}

void Body::InternalSwap(Body* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.targetuin_, lhs_arena,
      &other->_impl_.targetuin_, rhs_arena
  );
  swap(_impl_.settings_, other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Body::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_search_2eproto_getter, &descriptor_table_search_2eproto_once,
      file_level_metadata_search_2eproto[1]);
}

// ===================================================================

class Settings::_Internal {
 public:
};

Settings::Settings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:nt.search.Settings)
}
Settings::Settings(const Settings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Settings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.filed11_){}
    , decltype(_impl_.setting_){}
    , decltype(_impl_.filed4_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.filed11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filed11_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filed11().empty()) {
    _this->_impl_.filed11_.Set(from._internal_filed11(), 
      _this->GetArenaForAllocation());
  }
  _impl_.setting_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.setting_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_setting().empty()) {
    _this->_impl_.setting_.Set(from._internal_setting(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.filed4_ = from._impl_.filed4_;
  // @@protoc_insertion_point(copy_constructor:nt.search.Settings)
}

inline void Settings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filed11_){}
    , decltype(_impl_.setting_){}
    , decltype(_impl_.filed4_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.filed11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filed11_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.setting_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.setting_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:nt.search.Settings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Settings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.filed11_.Destroy();
  _impl_.setting_.Destroy();
}

void Settings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:nt.search.Settings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filed11_.ClearToEmpty();
  _impl_.setting_.ClearToEmpty();
  _impl_.filed4_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Settings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 filed4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.filed4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string filed11 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_filed11();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.search.Settings.filed11"));
        } else
          goto handle_unusual;
        continue;
      // string setting = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_setting();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "nt.search.Settings.setting"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Settings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nt.search.Settings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 filed4 = 4;
  if (this->_internal_filed4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_filed4(), target);
  }

  // string filed11 = 11;
  if (!this->_internal_filed11().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filed11().data(), static_cast<int>(this->_internal_filed11().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.search.Settings.filed11");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_filed11(), target);
  }

  // string setting = 55;
  if (!this->_internal_setting().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_setting().data(), static_cast<int>(this->_internal_setting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nt.search.Settings.setting");
    target = stream->WriteStringMaybeAliased(
        55, this->_internal_setting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nt.search.Settings)
  return target;
}

size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nt.search.Settings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filed11 = 11;
  if (!this->_internal_filed11().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filed11());
  }

  // string setting = 55;
  if (!this->_internal_setting().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_setting());
  }

  // uint32 filed4 = 4;
  if (this->_internal_filed4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_filed4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Settings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Settings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Settings::GetClassData() const { return &_class_data_; }


void Settings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Settings*>(&to_msg);
  auto& from = static_cast<const Settings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:nt.search.Settings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filed11().empty()) {
    _this->_internal_set_filed11(from._internal_filed11());
  }
  if (!from._internal_setting().empty()) {
    _this->_internal_set_setting(from._internal_setting());
  }
  if (from._internal_filed4() != 0) {
    _this->_internal_set_filed4(from._internal_filed4());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nt.search.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  return true;
}

void Settings::InternalSwap(Settings* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filed11_, lhs_arena,
      &other->_impl_.filed11_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.setting_, lhs_arena,
      &other->_impl_.setting_, rhs_arena
  );
  swap(_impl_.filed4_, other->_impl_.filed4_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Settings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_search_2eproto_getter, &descriptor_table_search_2eproto_once,
      file_level_metadata_search_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace search
}  // namespace nt
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nt::search::Stranger*
Arena::CreateMaybeMessage< ::nt::search::Stranger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::search::Stranger >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::search::Body*
Arena::CreateMaybeMessage< ::nt::search::Body >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::search::Body >(arena);
}
template<> PROTOBUF_NOINLINE ::nt::search::Settings*
Arena::CreateMaybeMessage< ::nt::search::Settings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nt::search::Settings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
